@page "/inventory/rename/{Id}"

<PageTitle>Change Inventory Item Name</PageTitle>

@using CQRSWebApp.Data
@using SimpleCQRS.ReadModel
@inject InventoryItemsService InventoryItemsService
@inject NavigationManager NavigationManager

<h1>Change Inventory Item Name</h1>

@if (inventoryItemDetailsDto == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <form @onsubmit="Submit">
        <div class="alert alert-danger" role="alert" hidden="@(exception == null)">@exception?.Message</div>
        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    <label for="Name" class="control-label">Name</label>
                    <input form="Name" class="form-control" required="true" @bind="@name" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <input type="submit" class="btn btn-primary" value="Submit"/>
                    <input type="button" class="btn btn-link" @onclick="@Cancel" value="Cancel"/>
                </div>
            </div>
        </div>
    </form>
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private InventoryItemDetailsDto? inventoryItemDetailsDto;
    private string? name;
    private Exception? exception;

    protected override void OnInitialized()
    {
        var guid = Guid.Parse(Id);
        inventoryItemDetailsDto = InventoryItemsService.GetInventoryItemDetails(guid);
    }

    void Submit()
    {
        try
        {
            exception = null;
            InventoryItemsService.ChangeInventoryItemName(inventoryItemDetailsDto.Id, name, inventoryItemDetailsDto.Version);
            NavigationManager.NavigateTo("inventory", true);
        }
        catch (Exception e)
        {
            exception = e;
        }
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("inventory");
    }
}